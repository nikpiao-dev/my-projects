 Subscribe Button
# Callbacks
Let's talk about callbacks.

If you ever used event handling between your HTML and JS code, such as with "on-click" events, you've used callbacks. üòÄ

Callback functions are passed as arguments into a parent function. We don't execute these functions directly. Instead, they are called in the parent function under some conditions.

# Events & Timers
Two common examples of when callbacks are used asynchronously are events and timers:

document.getElementById("btn").addEventListener("click", () => {
  setTimeout(() => alert("Hello!"), 3000);
});

The second argument for .addEventListener() is a callback function. Inside, we can do asynchronous stuff such as delaying an alert message by 3 seconds. ‚è≥

The setTimeout() function also uses an async callback function that activates after 3 seconds (3000 milliseconds).
