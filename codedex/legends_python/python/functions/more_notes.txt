29. Fortune Cookie
# Define a Function
So how do we create a function from scratch?

User-defined functions are functions we define ourselves to do a specific task, and it's a two-step process: 1Ô∏è) define and 2Ô∏è) call.

To define a function, we need a function definition. A function definition begins with the def keyword, followed by the function name, a set of parentheses, and a colon, in that order.

Here‚Äôs what a function definition looks like:

def name():
  # The code inside

The def keyword.
The function name, followed by a pair of parentheses ().
The colon :.
The code inside the function is called the body of the function. And just like if statements and while loops, the code inside a function must be indented.

Note: The common naming convention for functions is snake_case.

Suppose we want to create a function named say_hello():

def say_hello():
  print('Howdy! ü§†')
  print('How are you?')

We just defined a function that prints out two greetings!

Defining a function creates the function, and it's the first step, but it doesn't mean that Python will automatically run the code inside its body. How do we convey to Python that we want the function body executed?

We need to call the function!

# Call a Function
To call a function, we use the function name followed by parentheses somewhere in the code:

def say_hello():
  print('Howdy! ü§†')
  print('How are you?')

say_hello()

This executes the say_hello() function once!

So the output would be:

Howdy! ü§†
How are you?

We can also call a function numerous times. For example:

def say_hello():
  print('Howdy! ü§†')
  print('How are you?')

say_hello()
say_hello()
say_hello()

This executes the say_hello() function three times!

So the output would be:

Howdy! ü§†
How are you?
Howdy! ü§†
How are you?
Howdy! ü§†
How are you?

Now it‚Äôs your turn to define and call a function in a program!
